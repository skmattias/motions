@model CsAspnet.Models.dbcontext.Committee
@* TODO bind the enter key to the appropriate ok button on all pages and views *@
<div class="row">
    <div class="col-12">
        <h3 class="text-center">Kommitté @Model.FullName()</h3>
    </div>
</div>
<hr/>

@if (Model.Motion.Any())
{
    @* Desktop nav bar *@
    <div class="row">
        <div class="col-sm-4 d-none d-sm-block">
            <nav class="navbar navbar-light bg-light sticky-top" id="motions" 
                 style="max-height: calc(100vh - 2em); overflow: auto; top: 1em;">
                <nav class="nav nav-pills flex-column w-100">
                    @foreach (var motion in Model.Motion.OrderBy(m => m.MotionNumber))
                    {
                        <a href="#m-@motion.Id" class="nav-link text-break" id="motionTitleDesktop-@motion.Id">
                            @motion.FullName()
                        </a>
                    }
                </nav>
            </nav>
        </div>
        
        @* Mobile nav bar *@
        <div class="col-12 d-sm-none">
            <button class="btn btn-secondary" id="smallNavbar" data-toggle="modal" data-target="#allMotionsModal"
                    style="z-index: 1020; width: calc(100vw - 2em); margin-bottom: 16px;" >
                Alla motioner
            </button>
        </div>
        
        @* Content *@
        <div class="col-sm-8 col-xs-12" id="motionsContent" data-offset="0">
            @{
                bool first = true;
                foreach (var motion in Model.Motion.OrderBy(m => m.MotionNumber))
                {
                    if (first)
                    {
                        first = false;
                    }
                    else
                    {
                        <hr/>
                    }
                    <div id="m-@motion.Id">
                        @{
                            // Initially just render all motions.
                            await Html.RenderPartialAsync("_Motion", motion);
                        }
                    </div>
                }
            }
        </div>
    </div>

    @* All motions modal *@
    <div class="modal fade" id="allMotionsModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button class="close" data-dismiss="modal">
                        <span>&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <ul class="list-group modal-list-group">
                        @foreach (var motion in Model.Motion)
                        {
                            <a href="#m-@motion.Id" class="list-group-item text-break" 
                               onclick="$('#allMotionsModal').modal('hide');" id="motionTitleMobile-@motion.Id">
                                @motion.FullName()
                            </a>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </div>
}

<script type="text/javascript">

    //
    // Vars:
    var buttonSpinner = "<span class='spinner-border spinner-border-sm'></span>";
    var editingMotion = false;

    //
    // Functions:

    function loadMotion(motionId, button) {
        @* TODO update the title in both of the motion lists aswell! *@
        var oldButtonHtml = $(button).html();
        $(button).html(buttonSpinner + oldButtonHtml);
        $.ajax({
            type: "GET",
            url: "/Kommitteer/" + @Model.Id + "?handler=LoadMotion",
            data: {
                "motionId": motionId
            },
            contentType: 'application/json; charset=utf-8"',
            success: function (result) {
                if (result) {
                    $("#m-" + motionId).html(result);
                } else {
                    $(button).html(oldButtonHtml);
                }
                editingMotion = false;
            }, error: function() {
                $(button).html(oldButtonHtml);
                editingMotion = false;
            }
        });
    }

    //
    // Stuff for the navbar button on mobile:
    window.onscroll = function() {
        stickNavbar();
    };
    var navbar = $("#smallNavbar");
    var content = $("#motionsContent");
    var sticky = content.offset().top;
    function stickNavbar() {
        if (navbar.is(':visible')) {
            if (window.pageYOffset >= sticky) {
                navbar.addClass("sticky");
                content.css('margin-top', 38 + 16);
            } else {
                navbar.removeClass("sticky");
                content.css('margin-top', 0);
            }
        }
    }

</script>

@if (User.Identity.IsAuthenticated)
{
    <script type="text/javascript">
        
        function editMotion(motionId, button) {
            if (editingMotion) {
                alert("Du kan bara redigera en motion åt gången");
                return;
            }
            
            editingMotion = true;
            
            // Spin the button immediately.
            var oldButtonHtml = $(button).html();
            $(button).html(buttonSpinner);
            
            // Get the edit motion-html.
            $.ajax({
                type: "GET",
                url: "/Kommitteer/" + @Model.Id + "?handler=EditMotion",
                data: {
                    "motionId": motionId
                },
                contentType: 'application/json; charset=utf-8"',
                success: function (result) {
                    if (result) {
                        $("#m-" + motionId).html(result);
                    } else {
                        $(button).html(oldButtonHtml);
                    }
                }, error: function() {
                    $(button).html(oldButtonHtml);
                }
            });
        }
    
    </script>
}
