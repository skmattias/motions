@using CsAspnet.Models.dbcontext
@model CsAspnet.Models.dbcontext.Committee

<div class="row">
    <div class="col-12">
        <h2 class="text-center lato-bold">Kommitté @Model.FullName()</h2>
    </div>
</div>
<br/>

<div class="row">
    @* Desktop nav bar *@
    <div class="col-md-4 d-none d-md-block">
        @if (Model.Motion.Any())
        {
            <nav class="navbar navbar-light bg-light sticky-top shadow-sm" id="motions"
                 style="max-height: calc(100vh - 2em); overflow: auto; top: 1em;">
                <nav class="nav nav-pills flex-column w-100">
                    @foreach (var motion in Model.Motion.OrderBy(m => m.MotionNumber))
                    {
                        <a href="#m-@motion.Id" class="nav-link text-break" id="motionTitleDesktop-@motion.Id">
                            @motion.FullName()
                        </a>
                    }
                </nav>
            </nav>
        }
    </div>

    @* Mobile nav bar *@
    <div class="col-12 d-md-none">
        <button class="btn btn-secondary shadow" id="smallNavbar" data-toggle="modal" data-target="#allMotionsModal"
                style="z-index: 1020; width: 100%; margin-bottom: 16px;">
            Alla motioner
        </button>
    </div>
    
    @* Content *@
    <div class="col-md-8 col-xs-12" id="motionsContent" data-offset="0">
        @{
            bool first = true;
            var motions = Model.Motion.OrderBy(m => m.MotionNumber).ToList();
            // TODO lista med ps-att-satser, fyll på om vi hittar id 999, printa sist.
            for (int i = 0; i < motions.Count; i++)
            {
                var motion = motions[i];
                
                if (first)
                {
                    first = false;
                }
                else
                {
                    <hr/>
                }
                
                <div id="m-@motion.Id">
                    @{
                        // Initially just render all motions.
                        await Html.RenderPartialAsync("_Motion", Tuple.Create(motions, i));
                    }
                </div>
            }
            if (User.Identity.IsAuthenticated)
            {
                await Html.RenderPartialAsync("Admin/Motion/_AddMotionButton");
            }
        }
    </div>
</div>

@* All motions modal *@
<div class="modal fade" id="allMotionsModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button class="close" data-dismiss="modal">
                    <span>&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <ul class="list-group modal-list-group">
                    @foreach (var motion in Model.Motion)
                    {
                        <a href="#m-@motion.Id" class="list-group-item text-break" 
                           onclick="$('#allMotionsModal').modal('hide');" id="motionTitleMobile-@motion.Id">
                            @motion.FullName()
                        </a>
                    }
                </ul>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">

    //
    // Vars:
    var buttonSpinner = "<span class='spinner-border spinner-border-sm'></span>";
    var editing = false;
    
    //
    // Functions:
    function loadMotion(button, motionId) {
        var oldButtonHtml = $(button).html();
        $(button).html(buttonSpinner + oldButtonHtml);
        $.ajax({
            type: "GET",
            url: "/Kommitteer/" + @Model.Id + "?handler=LoadMotion",
            data: {
                "motionId": motionId
            },
            contentType: 'application/json; charset=utf-8"',
            success: function (result) {
                if (result) {
                    $("#m-" + motionId).html(result);
                } else {
                    $(button).html(oldButtonHtml);
                }
                editing = false;
            }, error: function() {
                $(button).html(oldButtonHtml);
                editing = false;
            }
        });
    }

    //
    // Stuff for the navbar button on mobile:
    window.onscroll = function() {
        stickNavbar();
    };
    window.onresize = function() {
        stickNavbar();
    };
    var navbar = $("#smallNavbar");
    var content = $("#motionsContent");
    var sticky = content.offset().top;
    function stickNavbar() {
        if (navbar.is(':visible')) {
            if (window.pageYOffset >= sticky) {
                navbar.addClass("sticky");
                content.css("margin-top", 38 + 16);
                navbar.width(content.width() - 26);
            } else {
                navbar.removeClass("sticky");
                content.css("margin-top", 0);
                navbar.css("width", "100%");
            }
        }
    }

</script>

@if (User.Identity.IsAuthenticated)
{
    <script type="text/javascript">
        
        //
        // Motion functions:
        
        function editMotion(button, motionId) {
            if (editing) {
                alert("Du kan bara redigera en sak åt gången");
                return;
            }
            
            editing = true;
            
            // Spin the button immediately.
            var oldButtonHtml = $(button).html();
            $(button).html(buttonSpinner);
            
            // Get the edit motion-html.
            $.ajax({
                type: "GET",
                url: "/Admin/Index?handler=EditMotion",
                data: {
                    "motionId": motionId
                },
                contentType: 'application/json; charset=utf-8"',
                success: function (result) {
                    if (result) {
                        $("#m-" + motionId).html(result);
                    } else {
                        $(button).html(oldButtonHtml);
                    }
                }, error: function() {
                    $(button).html(oldButtonHtml);
                }
            });
        }
        
        function addMotion(button) {
            // Spin the button immediately.
            var oldButtonHtml = $(button).html();
            $(button).html(buttonSpinner);
            
            // Get the add motion-html.
            $.ajax({
                type: "GET",
                url: "/Admin/Index?handler=AddMotion",
                data: {
                    "committeeId": @Model.Id
                },
                contentType: 'application/json; charset=utf-8"',
                success: function (result) {
                    $("#newMotionDiv").html(result);
                }, error: function() {
                    $(button).html(oldButtonHtml);
                }
            });
        }
        
        function cancelAddMotion(button) {
            // Spin the button immediately.
            var oldButtonHtml = $(button).html();
            $(button).html(buttonSpinner);
            
            // Get the add motion-html.
            $.ajax({
                type: "GET",
                url: "/Admin/Index?handler=CancelAddMotion",
                contentType: 'application/json; charset=utf-8"',
                success: function (result) {
                    $("#newMotionDiv").html(result);
                }, error: function() {
                    $(button).html(oldButtonHtml);
                }
            });
        }
        
        function deleteMotion(button, motionId) {
            var oldButtonHtml = $(button).html();
            $(button).html(buttonSpinner + oldButtonHtml);
            
            $.ajax({
                traditional: true,
                type: "POST",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                url: "/Admin/Index?handler=DeleteMotion",
                data: JSON.stringify(motionId),
                contentType: 'application/json; charset=utf-8"',
                success: function(result) {
                    if (result.result) {
                        loadMotions();
                        $("#generalDeleteModal").modal("hide");
                    } else {
                        alert(result.message);
                        $(button).html(oldButtonHtml);
                    }
                }, error: function() {
                    alert("Okänt fel, prova att ladda om sidan");
                    $(button).html(oldButtonHtml);
                }
            });
        }
        
        //
        // Att functions:
        
        function editAtt(button, motionId, attId) {
            if (editing) {
                alert("Du kan bara redigera en sak åt gången");
                return;
            }
            
            // Spin the button immediately.
            var oldButtonHtml = $(button).html();
            $(button).html(buttonSpinner);
            
            // Get the edit motion-html.
            $.ajax({
                type: "GET",
                url: "/Admin/?handler=EditAtt",
                data: {
                    "attId": attId
                },
                contentType: 'application/json; charset=utf-8"',
                success: function (result) {
                    if (result) {
                        $("#a-" + attId).html(result);
                        editing = true;
                    } else {
                        $(button).html(oldButtonHtml);
                    }
                }, error: function() {
                    $(button).html(oldButtonHtml);
                }
            });
        }
        
        /// attType:
        ///     0: Att-sats
        ///     1: Tilläggsyrkande
        ///     2: PS att-sats
        function addAtt(button, motionId, attType) {
            if (editing) {
                alert("Du kan bara redigera en sak åt gången");
                return;
            }
            
            // Spin the button immediately.
            var oldButtonHtml = $(button).html();
            $(button).html(buttonSpinner);
            
            // Get the add motion-html.
            $.ajax({
                type: "GET",
                url: "/Admin/Index?handler=AddAtt",
                data: {
                    "motionId": motionId,
                    "attType": attType
                },
                contentType: 'application/json; charset=utf-8"',
                success: function (result) {
                    editing = true;
                    if (attType == 2) {
                        // We know that the motion id passed is the same as for the actual ps att list div id.
                        $("#newPsAttDiv-" + motionId).html(result);
                    } else {
                        $("#newAttDiv-" + motionId).html(result);
                    }
                }, error: function() {
                    $(button).html(oldButtonHtml);
                }
            });
        }
        
        function cancelAddAtt(button, motionId, attType) {
            // Spin the button immediately.
            var oldButtonHtml = $(button).html();
            $(button).html(buttonSpinner);
            
            // Get the add motion-html.
            $.ajax({
                type: "GET",
                url: "/Admin/Index?handler=CancelAddAtt",
                data: {
                    "motionId": motionId,
                    "attType": attType
                },
                contentType: 'application/json; charset=utf-8"',
                success: function (result) {
                    editing = false;
                    if (attType == 2) {
                        $("#newPsAttDiv-" + motionId).html(result);
                    } else {
                        $("#newAttDiv-" + motionId).html(result);
                    }
                }, error: function() {
                    $(button).html(oldButtonHtml);
                }
            });
        }
        
        function deleteAtt(button, attId) {
            var oldButtonHtml = $(button).html();
            $(button).html(buttonSpinner + oldButtonHtml);
            
            $.ajax({
                traditional: true,
                type: "POST",
                beforeSend: function (xhr) {
                    xhr.setRequestHeader("XSRF-TOKEN",
                        $('input:hidden[name="__RequestVerificationToken"]').val());
                },
                url: "/Admin/Index?handler=DeleteAtt",
                data: JSON.stringify(attId),
                contentType: 'application/json; charset=utf-8"',
                success: function(result) {
                    if (result.result) {
                        loadMotions();
                        $("#generalDeleteModal").modal("hide");
                    } else {
                        alert(result.message);
                        $(button).html(oldButtonHtml);
                    }
                }, error: function() {
                    alert("Okänt fel, prova att ladda om sidan");
                    $(button).html(oldButtonHtml);
                }
            });
        }
    
    </script>
}
